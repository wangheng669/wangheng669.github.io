<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[递归实现无限分类]]></title>
    <url>%2F2018%2F02%2F06%2F%E9%80%92%E5%BD%92%E5%AE%9E%E7%8E%B0%E6%97%A0%E9%99%90%E5%88%86%E7%B1%BB%2F</url>
    <content type="text"><![CDATA[递归实现无限分类 递归实现无限分类这几段时间一直在做一个企业站点,其中有个需要做,虽然该网站只有二级栏目,但是以后也不排除会用到无限级分类这种栏目,所以对该方法的说明做一下分析 代码如下//获取栏目 public static function getColumn($pid=0,&amp;$result=[],$blank=0){ //栏目查询 $res=self::all([&apos;parent_id&apos;=&gt;$pid]); //自增2 $blank+=2; //遍历所有栏目下的 foreach($res as $value){ //为栏目名称添加一个|-- $column_name=&apos;|--&apos;.$value-&gt;column_name; //在栏目名称前面添加指定数量的空格 $value-&gt;column_name=str_repeat(&apos;&amp;nbsp&apos;,$blank).$column_name; //保存该值 $result[]=$value; //再次使用该方法 self::getColumn($value-&gt;id,$result,$blank); } //由于返回结果不是数组,所以需要转换 return Collection::make($result)-&gt;toArray(); }]]></content>
  </entry>
  <entry>
    <title><![CDATA[LNMP和LAMP环境安装]]></title>
    <url>%2F2018%2F01%2F26%2FLNMP%E5%92%8CLAMP%E7%8E%AF%E5%A2%83%E5%AE%89%E8%A3%85%2F</url>
    <content type="text"><![CDATA[LNMP和LAMP环境安装 LNMP和LAMP环境安装Linux推荐使用centos7系统 Nginx yum -y install gcc automake autoconf libtool make yum install gcc gcc-c++ cd /usr/local/src wget ftp://ftp.csx.cam.ac.uk/pub/software/programming/pcre/pcre-8.38.tar.gz tar -zxvf pcre-8.38.tar.gz ./configurea make &amp;&amp; make install yum install zlib yum install ssl yum install nginx Mysql yum install mysql yum install mysql-server yum install mysql-devel yum install mariadb-server mariadb systemctl start mariadb systemctl enable mariadb mysqladmin -u root password “wangheng”; PHP wget http://hk1.php.net/get/php-7.1.13.tar.gz/from/this/mirror tar -zxvf php-7.1.13.tar.gz yum -y install libxml2 yum -y install libxml2-devel yum -y install openssl yum -y install openssl-devel yum -y install curl yum -y install curl-devel yum -y install libjpeg yum -y install libjpeg-devel yum -y install libpng yum -y install libpng-devel yum -y install freetype yum -y install freetype-devel yum -y install pcre yum -y install pcre-devel yum -y install libxslt yum -y install libxslt-devel yum -y install bzip2 yum -y install bzip2-devel ./configure –prefix=/usr/local/php –with-curl –with-freetype-dir –with-gd –with-gettext –with-iconv-dir –with-kerberos –with-libdir=lib64 –with-libxml-dir –with-mysqli –with-openssl –with-pcre-regex –with-pdo-mysql –with-pdo-sqlite –with-pear –with-png-dir –with-jpeg-dir –with-xmlrpc –with-xsl –with-zlib –with-bz2 –with-mhash –enable-fpm –enable-bcmath –enable-libxml –enable-inline-optimization –enable-gd-native-ttf –enable-mbregex –enable-mbstring –enable-opcache –enable-pcntl –enable-shmop –enable-soap –enable-sockets –enable-sysvsem –enable-sysvshm –enable-xml –enable-zip make &amp;&amp; make install cp php.ini-development /usr/local/php/lib/php.ini cp /usr/local/php/etc/php-fpm.conf.default /usr/local/php/etc/php-fpm.conf cp sapi/fpm/php-fpm /usr/local/bin Apache yum install httpd 前面的还好说一些,到这里关键点就非常恶心了,装memcached死活装不上,找了半天原来是最新版的memcached已经不适配php7.2.1了,需要到github下载才可以,于是我下载了一下,然后安装过程中发现报一个文件不存在,在这里借鉴了某博客的教程http://blog.csdn.net/happyrabbit456/article/details/44680597,还有另外一个地址找不到了,等找到再写吧]]></content>
  </entry>
  <entry>
    <title><![CDATA[使用Hexo搭建个人博客]]></title>
    <url>%2F2018%2F01%2F26%2F%E4%BD%BF%E7%94%A8Hexo%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%2F</url>
    <content type="text"><![CDATA[使用Hexo搭建个人博客 使用Hexo搭建个人博客 前些日子使用Hexo搭建了一个简单的个人博客,由于用到的插件都是搜刮来的,也没怎么修改,但是电脑重装后没有备份找不回来了,害得我还要再折腾一遍,干脆先把步骤写下来,以便于以后参考 准备工作 安装NodeJs,Git,Github账号,一个域名,LeanCloud账号,百度站长账号 这些安装包或者账号基本都是傻瓜式安装就不多写了,要将NPM添加到系统变量中 安装hexo 这个就是今天的主角,安装也是非常简单的,一个命令搞定 npm install -g hexo-cli 初始化操作 安装完hexo后,创建一个文件夹用于存放hexo生成的文件 例如:wangheng669.github.io 进入该目录后初始化 hexo init 然后安装必要插件 npm install 由于不确定是否安装了server模块,所以安装一遍 npm install hexo-server 配置站点_config.yml 由于本人记性较差,此处折腾了好久,由于比较着急所以没有配置好_config.yml就启动本地服务器,导致一直没有正常运行 ··· # Site title: 王恒的博客 subtitle: 代码改变世界 description: wangheng669 author: 王恒 language: zh-Hans timezone: Asia/Shanghai ··· 干脆直接把代码全部拷贝上来好了.. 安装主题 安装一个next主题是必不可少的,在我还没有找到可以替代的主题之前 安装该主题也比较简单,只需要一个命令 git clone https://github.com/iissnan/hexo-theme-next themes/next 启用只需在站点配置文件中修改 theme: next 配置主题_config.yml 更换样式 其他样式不推荐 scheme: Muse 设置语言 默认主题的语言是zh-CN,该主题是zh-Hans 修改主配置文件 language: zh-Hans 设置菜单 菜单类型 还是不要设置太多,弄个归档,标签,关于就差不多了 ··· menu: #home: / || home about: /about/ || user tags: /tags/ || tags #categories: /categories/ || th archives: /archives/ || archive #schedule: /schedule/ || calendar #sitemap: /sitemap.xml || sitemap #commonweal: /404/ || heartbeat ··· 菜单文本 可以自由添加 在languages目录中的zh-Hans中添加 ··· menu: home: 首页 archives: 归档 categories: 分类 tags: 标签 about: 关于 search: 搜索 commonweal: 公益404 something: 有料 ··· 菜单图标 能找到就改.. 找到menu_icons字段配置 设置侧栏 没想到这么快就要完成了,侧栏一般是显示我的头像,签名和微博地址等,当然也可以添加网易云音乐的一些插件 侧栏基本不需要配置,如果要配置的话可以去next官网看看 设置头像 头像也是在侧栏位置,请将头像放在source/images/文件夹内,以免生成后消失 头像圆形旋转 修改themes\next\source\css_common\components\sidebar\sidebar-author.styl： 具体还是看w3cschool吧 百度统计 百度统计这东西还是有点作用的,看到这里,我会想起来当时面试SEM的时候,有个人还问我有没有操作过百度的后台,难道就是这东西.. 登录百度统计的后台,点击获取代码,将代码中的hm.js?后的代码复制在主配置文件中添加 baidu_analytics=你复制的东西 阅读次数 我是参考了这个教程 https://notes.wanghao.work/2015-10-21-%E4%B8%BANexT%E4%B8%BB%E9%A2%98%E6%B7%BB%E5%8A%A0%E6%96%87%E7%AB%A0%E9%98%85%E8%AF%BB%E9%87%8F%E7%BB%9F%E8%AE%A1%E5%8A%9F%E8%83%BD.html#%E9%85%8D%E7%BD%AELeanCloud 不得不吐槽一下,这个网站的动画效果也太消耗资源了吧 登录LeanCloud后台,进入网站设置,这里的基本设置就不说了,找到自己的ID和KEY在主题配置中修改为 ··· leancloud_visitors: enable: true app_id: yGxqdcv1E9TB3anP1y2kjapj-gzGzoHsz app_key: sMk96yzm3RvqGF7yxIqGWQds ··· 别忘了重新部署 搜索服务 这个东西是必不可少的,推荐使用Local Search模块 安装 npm install hexo-generator-searchdb –save 配置站点文件 ··· search: path: search.xml field: post format: html limit: 10000 ··· 配置主题文件 ··· # Local search local_search: enable: true ··· 设置 RSS 有利于让用户最快获取网站的更新,为了好看装一下 添加标签页面 现在是2018年1月26日00:28:29,懒得写了,明天早起,明天再写吧,哈哈哈,没想到这个RSS还不能用,而且报错找问题找了很久,先做个备份吧 hexo备份 Hexo备份要保存在hexo分支中,在github网站上的wangheng669.github.io中创建一个分支 添加标签 hexo new page tags 在添加的标签页面中添加代码 type: “tags” comments: false 在你的文章中添加适当的标签 设置代码颜色 设置为黑色 highlight_theme: night 侧边栏社交链接 添加微博,github就好了 social这个字段中自己添加就好了,social_icons是设置图标 腾讯公益404页面 404是比较实用的了,还有公益页面也可以 添加一些Html代码 &lt;!DOCTYPE HTML&gt; &lt;html&gt; &lt;head&gt; &lt;meta http-equiv=&quot;content-type&quot; content=&quot;text/html;charset=utf-8;&quot;/&gt; &lt;meta http-equiv=&quot;X-UA-Compatible&quot; content=&quot;IE=edge,chrome=1&quot; /&gt; &lt;meta name=&quot;robots&quot; content=&quot;all&quot; /&gt; &lt;meta name=&quot;robots&quot; content=&quot;index,follow&quot;/&gt; &lt;link rel=&quot;stylesheet&quot; type=&quot;text/css&quot; href=&quot;https://qzone.qq.com/gy/404/style/404style.css&quot;&gt; &lt;/head&gt; &lt;body&gt; &lt;script type=&quot;text/plain&quot; src=&quot;http://www.qq.com/404/search_children.js&quot; charset=&quot;utf-8&quot; homePageUrl=&quot;/&quot; homePageName=&quot;回到我的主页&quot;&gt; &lt;/script&gt; &lt;script src=&quot;https://qzone.qq.com/gy/404/data.js&quot; charset=&quot;utf-8&quot;&gt;&lt;/script&gt; &lt;script src=&quot;https://qzone.qq.com/gy/404/page.js&quot; charset=&quot;utf-8&quot;&gt;&lt;/script&gt; &lt;/body&gt; &lt;/html&gt; 站点建立时间 应该在页面的地步 设置背景动画 这个动画是最不消耗资源的,也是最好看的 canvas_nest: true 评论系统 评论系统的开启还是很简单的,但是太多了也不好看,等啥时候找到简洁的办法后再说吧 disqus: enable: false shortname: count: true 添加音乐 选择网易云的外链即可 在这个位置修改themes/next/layout/_custom/sidebar.swig 实现文章标题栏显示更多的文章信息 具有统计数字等功能 npm install hexo-wordcount –save 到此基本的设置也就完成了,至于添加文章什么的只需要在我的笔记中复制就好了,至于样式还是看时间定吧,估计好好搞的话要学习一些前端框架什么的 但是我们还没有将这东西放在github上,准备好万网的域名,解析到你的资源库的网站中别忘了添加CHAME文件和在domain中设置你自己的域名]]></content>
  </entry>
  <entry>
    <title><![CDATA[Nginx连接Memcached]]></title>
    <url>%2F2018%2F01%2F26%2FNginx%E8%BF%9E%E6%8E%A5Memcached%2F</url>
    <content type="text"><![CDATA[Nginx连接Memcached Nginx连接Memcached准备工作安装Nginx,Mysql,PHP,Memecached 配置Nginx.conf文件set $memcached_key &quot;$uri&quot;; memcached_pass 127.0.0.1:11211; 启动Memcached并连接localhost,添加数据/usr/bin/memcached -u root -d telnet localhost 11211 add /user1.html[此处为Key] 0 0 8[此处为字节数量] wangheng 结果当访问user1时会返回指定的值 优化当输入不存在的key时应先调用php方法 使用php方法连接数据库返回对应Key的值,并将其写入到Memcached中,用于下次调用 问题在实际开发中,会有多台服务器进行处理,如果全部设置Memcached,添加数据和获取时会混乱 解决1.安装第三方模块[nginx只能在编译的时候安装模块] 需要对nginx进行重新编译并制定 -add-module=/usr/loocal/src/模块路径 make &amp;&amp; make install 2.添加三台实验服务器 upstream server_name{ server localhost:11211; } 3.修改Nginx.conf中的memcached_pass server_name; 这个时候memcached处理就不会乱跑了,但是php的写入还没有同步 4.修改php.ini添加memcache.hash_strategy=consistent 难受的问题看了老师的视频,发现在php一致性时出现了访问不一致的问题,根据老师的说明只需要添加memcache.hash_strategy=consistent即可,但到后来发现并没有其作用,经过反复调试发现,原来我并没有安装memcache,只安装了memcached扩展,搞不懂为什么,于是网上搜索了Memcache的php7安装的方法,在php.ini中添加了exstion=memcache.so后才算完事,进行配置时要使用远程主机名而不是localhost 经过测试发现:memcached不能使用一致性,因为没有那个扩展块,以后解决吧]]></content>
  </entry>
  <entry>
    <title><![CDATA[phpMyAdmin安装]]></title>
    <url>%2F2018%2F01%2F26%2FphpMyAdmin%E5%AE%89%E8%A3%85%2F</url>
    <content type="text"><![CDATA[phpMyAdmin安装 phpMyAdmin安装由于在Linux环境下需要设置某些用户,个人感觉还是图形界面适合操作1.官网下载phpMyAdmin2.解压并将其复制到站点根目录3.重命名一个不容易被发现的名称4.拷贝config.sample.inc.php到config.inc.php5.修改config.inc.php中的ip字段6.在Nginx.conf中添加该地址]]></content>
  </entry>
  <entry>
    <title><![CDATA[Memcache基础教程]]></title>
    <url>%2F2018%2F01%2F26%2FMemcache%E5%9F%BA%E7%A1%80%E6%95%99%E7%A8%8B%2F</url>
    <content type="text"><![CDATA[Memcache基础教程 #Memcache基础教程 最近在学Nginx,由于用到了Memcache,做一下简单的总结 Memcache作用 用于分担数据库压力,常用于大负载的网站,Memcached是服务端的主程序文件名 Memcache启动 /usr/local/bin/Memcached -u root -d Memcache使用 系统类addServer 添加服务器addServers 添加多个服务器getStats 获取服务器状态getVersion 获取服务器版本 数据类add 添加数据set 设置数据,可用于取代replace和adddelete 删除数据flush_all 清除所有数据replace 替换数据increment 自增数据get 获取数据 进阶类setMulti 设置多个数据deleteMulti 删除多个数据getMulti 获取多个数据getResultCode 获取上次操作的结果getResultMessage 获取上次操作的信息 项目中使用Memcache 即使生成缓存 节省内存,和减少数据库负载 提前生成缓存 适用于访问量高的情况 永久缓存 适用于修改频率低的网页 案例 检测缓存中是否存在数据,优先使用缓存中数据,没有则调取数据库中的数据 注意事项 1.不要在单机模式中使用Memcached 因为会极大的占用内存 2.不要只使用Memcache保存重要数据 3.定期查看缓存的分布状况和几种情况 因为缓存是会消失的]]></content>
  </entry>
  <entry>
    <title><![CDATA[NodeJs初识]]></title>
    <url>%2F2018%2F01%2F26%2FNodeJs%E5%88%9D%E8%AF%86%2F</url>
    <content type="text"><![CDATA[NodeJs初识 NodeJs初识 前不久使用hexo搭建了自己的个人博客,虽然一路都是install过来的,但感觉应该对所用到的工具有更深的了解才对,所以在此简单记录一下NodeJs的使用 NodeJs的安装 windows的安装 官网 http://nodejs.org.com下载,一路next,别忘了选择添加环境变量 linux的安装 官网下载源码包,wget获取tar解压,./configure –prefix=路径 make &amp;&amp; make install 配置环境变量具体请看菜鸟教程。。。 NodeJs的基本命令 NodeJs的功能和Nginx以及Apache类似,可以处理和返回请求,只需要引入自带的http模块即可 var http = require(“http”); 引入 required 模块 http.createServer(reponse,request){} 创建服务器 listen(8888) 监听某端口,可通过该端口获取对应的值,跟在createServer的后面 NPM的使用介绍包安装管理工具,能解决NodeJS部署问题 主要功能 下载第三方包 下载第三方命令 上传自己的包注意 新版Nodejs已经集成了NPM NPM的基本命令 安装 npm install 包名 卸载 npm uninstall 包名 更新 npm update 包名 搜索 npm search 包名 生成 npm init 需要package.json 全局 npm -g 帮助 npm -h NodeJs REPL 交互式解释器,类似于windows的cmdNode自带交互式解释器 读取 读取用户输入 执行 执行输入的数据结构 打印 输出结果 循环 循环操作以上步骤 简单的表达式运算 例如加减乘除等 使用变量 可以将数据存储在变量中,必须使用var,没有var会直接输出 多行表达式 例如for循环while循环等 下划线_变量 可通过_获取上一次的运算结果 REPL命令 ctrl+c 退出当前终端ctrl+c两次 退出Node PERLctrl+d 退出Node PERL向上/向下键 查看输入的历史命令tab键 列出当前命令.help 列出使用命令.break 退出多行表达式.clear 退出多行表达式.save filename 保存当前Node PERL到指定文件.load filename 载入当前Node PERL的会话内容 NodeJs回调函数NodeJs支持大量的回调函数,可以处理并发请求]]></content>
  </entry>
  <entry>
    <title><![CDATA[centos7和windows的安装]]></title>
    <url>%2F2018%2F01%2F26%2Fcentos7%E5%92%8Cwindows%E7%9A%84%E5%AE%89%E8%A3%85%2F</url>
    <content type="text"><![CDATA[centos7和windows的安装 centos7和windows的安装所需工具 软碟通 优盘 电脑 分区工具 centos7的镜像文件 安装window不多说了,重点在于如何安装centos7 0.进入windows使用分区工具对磁盘进行分区1.使用软碟通将centos7镜像文件写入到U盘2.按F12进入U盘启动3.按Tab将引导文件修改为/dev/sdb44.安装成功后使用命令打开vim /etc/grub.d/40_custom5.添加该命令 1234menuentry &apos;Windows7&apos;&#123;set root=(hd0,1)chainloader +1&#125; 6.grub2-mkconfig -o /boot/grub2/grub.cfg并重启]]></content>
  </entry>
</search>
